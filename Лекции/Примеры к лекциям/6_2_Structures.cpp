#include <iostream>
using namespace std;

// Объявляем структуру глобальной, чтобы к ней был доступ из всего файла
struct my_complex{
	double Re, Im; // Поля (атрибуты) структуры
	// Метод инициализации. Возвращает истину, если переданные значения 
	// удовлетворяют обязательным для полей условиям. Например, неотрицательны,
	// не равны нулю и т.д. В противном случае возвращает ложь.
	bool Init(double x, double y){
		// Для комплексных чисел дополнительных условий нет, но они будут в других вариантах
		//if (условие конкретной задачи) return false;
		return true;
	}
    // Метод чтения с клавиатуры значений. Требует ввода чисел до тех пор,
    // пока функция Init() не возвратит истину
	void Read(){
		double x, y;
		do{
			cin>>x>>y;
		}
		while(!Init(x, y));
		Re=x; Im=y;
	}
	// Метод вывода на экран. Этот вариант вывода не очень красиво выводит отрицательные
	// числа и числа с нулевой мнимой частью. Рекомендуется его доработать
	// для вариантов с комплексными числами. В других вариантах необходимо 
	// изменить вывод соответствующим варианту образом.
	void Display(){
		cout<<Re<<"+"<<Im<<"i"<<endl;
	}
};

// Внешняя функция, считающая сумму двух комплексных чисел. Возвращает комплексное число
my_complex summa(my_complex X, my_complex Y)
{
	my_complex S;
	S.Re = X.Re + Y.Re;
	S.Im = X.Im + Y.Im;
	return S;
}

int main() {
	my_complex A, B;
	A.Read(); // Первое число вводим, второе присваиваем поэлементно
	B.Re=1; B.Im=-3;
	
	// Выводим числа на экран
	A.Display();
	B.Display();
	
	// Считаем их сумму, сохраняем ее в С и выводим на экран
	my_complex C;
	C = summa(A, B);
	C.Display();
	return 0;
}